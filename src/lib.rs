/// This function takes in the states and returns group velocity:
/// 
/// returns simple case for now
/// 
/// FIXME: if k is 0, returns inf. this may cause problems?
 pub fn group_velocity(k: f64) -> f64 {
    let g = 9.8; // relocate this?
    (g/k).sqrt()
 }

#[cfg(test)]
mod tests {
    use crate::{group_velocity};

   // testing group velocity function against values generated by wolfram alpha
    #[test]
    fn test_group_velocity() {
      let results = [
         (1.0, 3.1305),
         (3.0, 1.80739),
         (5.0, 1.4),
         (10.0, 0.989949)
      ];
      for (k, ans) in results {
         assert!((group_velocity(k) - ans).abs() < 1.0e-4, "k: {}, ans: {}", k, ans);
      } 
    }
}
